set pastetoggle=<F2>
set nu
set ts=4
set sw=4
set expandtab
syntax on
set hls
set incsearch
set cindent
set autoindent

"python with virtualenv support, http://codingpy.com/article/vim-and-python-match-in-heaven/
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

function HeaderPython()
    call setline(1, "#!/usr/bin/env python")
    call append(1, "# -*- coding: utf-8 -*-")
    normal G
    normal o
    normal o
    call setline(5, "if __name__ == '__main__':")
    call setline(6, "    pass")
endf
autocmd bufnewfile *.py call HeaderPython()

function HeaderSh()
    call setline(1, "#!/usr/bin/env bash")
    normal G
    normal o
    normal o
endf
autocmd bufnewfile *.sh call HeaderSh()

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" let Vundle manage Vundle
Bundle 'gmarik/vundle'
Plugin 'glench/vim-jinja2-syntax'

"my Bundle here:
" http://vimawesome.com
" original repos on github
Plugin 'rykka/riv.vim'    " rst
Bundle 'Rykka/InstantRst'

Plugin 'majutsushi/tagbar'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Bundle 'pangloss/vim-javascript'
Bundle 'mxw/vim-jsx'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mattn/emmet-vim'
Bundle 'moll/vim-node'
Bundle 'kien/ctrlp.vim'
Bundle 'sukima/xmledit'
"Bundle 'sjl/gundo.vim'
Bundle 'jiangmiao/auto-pairs'
Bundle 'klen/python-mode'
Bundle 'heavenshell/vim-pydocstring'
"Bundle 'Valloric/ListToggle'
Bundle 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
"Bundle 'Valloric/YouCompleteMe'
Bundle 'scrooloose/syntastic'
"Bundle 't9md/vim-quickhl'
Bundle 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround'
"..................................
" vim-scripts repos
"Bundle 'YankRing.vim'
"Bundle 'vcscommand.vim'
Bundle 'ShowPairs'
"Bundle 'SudoEdit.vim'
"Bundle 'EasyGrep'
"Bundle 'VOoM'
"Bundle 'VimIM'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" for python settings
" Override go-to.definition key shortcut to Ctrl-]
nmap <silent> <C-d> <Plug>(pydocstring)
nnoremap py :!python %<cr>
"let g:pymode_python = 'python3'  " Values are `python`, `python3`, `disable`.
let g:pymode_trim_whitespaces = 1
let g:pymode_quickfix_maxheight = 3
let g:pymode_indent = 1
let g:pymode_folding = 1
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_cmd = 'import ipdb; ipdb.set_trace()  # BREAKPOINT'
let g:pymode_breakpoint_bind = "<C-k>"


let g:pymode_rope_goto_definition_bind = "<C-]>"

let g:pymode_run = 1
let g:pymode_run_bind = "<C-j>"
let g:pymode_virtualenv = 1
"let g:pymode_virtualenv_path = $VIRTUAL_ENV

" Override view python doc key shortcut to Ctrl-Shift-d
let g:pymode_doc=1
let g:pymode_doc_bind = 'K'

autocmd CompleteDone * pclose
let g:pymode_rope = 1
let g:pymode_rope_autoimport = 0
let g:pymode_rope_lookup_project = 0

let g:pymode_lint = 1
let g:pymode_lint_on_write = 0
let g:pymode_lint_on_fly = 0
let g:pymode_lint_message = 1
let g:pymode_lint_checkers = ['pep8', 'pylint', 'mccabe']
let g:syntastic_python_checkers = ['pep8']
let g:pymode_lint_ignore = "C0111, W0105"
let g:pymode_lint_signs = 1
let g:pymode_lint_todo_symbol = 'WW'
let g:pymode_lint_error_symbol = 'EE'

" For emmemt only avilable for html,css,sass
let g:user_emmet_install_global = 0
autocmd FileType html,css,sass,scss EmmetInstal
" emment key
let g:user_emmet_leader_key='<C-J>'

" for nerdtree
" autocmd vimenter * NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree
nnoremap <F10> :exe 'NERDTreeToggle' <CR>


" for Tagbarbar, sudo apt-get install ctags
nnoremap <silent> <F12> :TagbarToggle<CR>
let g:tagbar_autofocus = 1


" for airline, http://vimawesome.com/plugin/vim-airline
function! ArilineInit()
    let g:airline_theme = 'wombat'
    let g:airline_section_a = airline#section#create(['mode', ' ', 'branch'])
    let g:airline_section_b = airline#section#create_left(['ffenc', 'hunks', '%f'])
    let g:airline_section_c = airline#section#create(['filetype'])
    let g:airline_section_x = airline#section#create(['%P'])
    let g:airline_section_y = airline#section#create(['%B'])
    let g:airline_section_z = airline#section#create_right(['%l', '%c'])
endfunction
autocmd VimEnter * call ArilineInit()


" shortcuts to vimdiff, http://stackoverflow.com/questions/7309707/why-does-git-mergetool-opens-4-windows-in-vimdiff-id-expect-3
let mapleader=','
let g:mapleader=','

if &diff
    map <leader>1 :diffget LOCAL<CR>
    map <leader>2 :diffget BASE<CR>
    map <leader>3 :diffget REMOTE<CR>
endif


" 高亮当前选中单词
autocmd CursorMoved * exe exists("HlUnderCursor")?HlUnderCursor?printf('match IncSearch /\V\<%s\>/', escape(expand('<cword>'), '/\')):'match none':""
nnoremap <silent> <F3> :exe "let HlUnderCursor=exists(\"HlUnderCursor\")?HlUnderCursor*-1+1:1"<CR>


" when use diff from cmd line, change color theme
if &diff
    colorscheme evening
endif

" 书写rst用到
let proj1 = { 'path': '~/Program/python-web-guide',}
let g:riv_projects = [proj1]


" ctrlp, 在~/.agignore添加一行node_modules
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

let g:pymode_options_max_line_length = 79
let g:pymode_options_colorcolumn = 1


" 指定UltiSnips python的docstring风格, sphinx, google, numpy
let g:ultisnips_python_style = 'google'
